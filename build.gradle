import net.researchgate.release.GitAdapter

import java.util.regex.Matcher

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java-library'
    // Publish
    id 'maven-publish'
    id 'maven'
    id 'net.researchgate.release' version '2.8.1'
}

// Variables
def main_class = 'application.AppStart'
static def getDate() { return new Date().format('dd.MM.yyyy HH:mm:ss')}
repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

dependencies {
    // Gradle dependencies
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'


    // Exporting to iCal
    // https://github.com/mangstadt/biweekly
    compile 'net.sf.biweekly:biweekly:0.6.6'

    //Log4J
    compile 'org.apache.logging.log4j:log4j-api:2.14.0'
    compile 'org.apache.logging.log4j:log4j-core:2.14.0'

    // Test dependencies
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13'
}

application {
    // Define the main class for the application.
    getMainClass().set(main_class)
}

jar {
    manifest {
        attributes  'Implementation-Title': rootProject.name,
                    'Implementation-Version': getArchiveVersion(),
                    'Main-Class': main_class,
                    'Build-Time-ISO-8601': getDate(),
                    'Multi-Release': 'true'
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

tasks.withType(Jar) {
    destinationDirectory = file("$rootDir/build/jar")
}
tasks.withType(Javadoc) {
    destinationDir = file("$rootDir/build/doc")
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/SirMoM/BirthdayManager")

            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            groupId 'sirmom'
            artifactId getArchivesBaseName().toString().toLowerCase()
            version getVersion()

            from components.java
        }
    }
}

release {
    failOnCommitNeeded = true
    failOnPublishNeeded = true
    failOnSnapshotDependencies = true
    failOnUnversionedFiles = true
    failOnUpdateNeeded = true
    revertOnFail = true
    preCommitText = ''
    preTagCommitMessage = '[Gradle Release Plugin] - pre tag commit: '
    tagCommitMessage = '[Gradle Release Plugin] - creating tag: '
    newVersionCommitMessage = '[Gradle Release Plugin] - new version commit: '
    tagTemplate = '${version}'
    versionPropertyFile = 'gradle.properties'
    versionProperties = []
    snapshotSuffix = '-SNAPSHOT'
    buildTasks = ['build']
    ignoredSnapshotDependencies = []
    versionPatterns = [
            /(\d+)([^\d]*$)/: { Matcher m, Project p -> m.replaceAll("${(m[0][1] as int) + 1}${m[0][2]}") }
    ]
    pushReleaseVersionBranch = false
    scmAdapters = [
            GitAdapter
    ]

    git {
        requireBranch = 'master'
        pushToRemote = 'origin'
        pushToBranchPrefix = 'release/'
        commitVersionFileOnly = false
        signTag = false
    }
}