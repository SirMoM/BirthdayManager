import net.researchgate.release.BzrAdapter
import net.researchgate.release.GitAdapter
import net.researchgate.release.HgAdapter
import net.researchgate.release.SvnAdapter
import java.util.regex.Matcher

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java-library'
    // Publish
    id 'maven-publish'
    id 'maven'
    id 'net.researchgate.release' version '2.8.1'
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}
dependencies {
    // Gradle dependencies
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'


    // Exporting to iCal
    // https://github.com/mangstadt/biweekly
    compile 'net.sf.biweekly:biweekly:0.6.6'

    //Log4J
    compile 'org.apache.logging.log4j:log4j-api:2.14.0'
    compile 'org.apache.logging.log4j:log4j-core:2.14.0'

    // Test dependencies
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13'
}

application {
    // Define the main class for the application.
    mainClass = 'application.AppStart'
}
release {
    failOnCommitNeeded = true
    failOnPublishNeeded = true
    failOnSnapshotDependencies = true
    failOnUnversionedFiles = true
    failOnUpdateNeeded = true
    revertOnFail = true
    preCommitText = ''
    preTagCommitMessage = '[Gradle Release Plugin] - pre tag commit: '
    tagCommitMessage = '[Gradle Release Plugin] - creating tag: '
    newVersionCommitMessage = '[Gradle Release Plugin] - new version commit: '
    tagTemplate = '${version}'
    versionPropertyFile = 'gradle.properties'
    versionProperties = []
    snapshotSuffix = '-SNAPSHOT'
    buildTasks = ['build']
    ignoredSnapshotDependencies = []
    versionPatterns = [
            /(\d+)([^\d]*$)/: { Matcher m, Project p -> m.replaceAll("${(m[0][1] as int) + 1}${m[0][2]}") }
    ]
    pushReleaseVersionBranch = false
    scmAdapters = [
            GitAdapter,
            SvnAdapter,
            HgAdapter,
            BzrAdapter
    ]

    git {
        requireBranch = 'master'
        pushToRemote = 'origin'
        pushToBranchPrefix = 'release'
        commitVersionFileOnly = false
        signTag = false
    }
}